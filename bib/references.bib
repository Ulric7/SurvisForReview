@article{KendallKRU10survey,
  author = {Graham Kendall and
                  Sigrid Knust and
                  Celso C. Ribeiro and
                  Sebasti{\'{a}}n Urrutia},
  title = {Scheduling in sports: An annotated bibliography},
  journal = {Comput. Oper. Res.},
  volume = {37},
  number = {1},
  pages = {1--19},
  year = {2010},
  url = {https://doi.org/10.1016/j.cor.2009.05.013},
  doi = {10.1016/J.COR.2009.05.013},
  abstract = {Sports have worldwide appeal. Professional sport leagues involve significant investments in players. Events such as the Olympics Games, the Football World Cup and the major golf and tennis tournaments generate huge worldwide television audiences and many sports are multi-million dollar industries. A key aspect of sporting events is the ability to generate schedules that optimize logistic issues and that are seen as fair to all those who have an interest. This is not just restricted to generating the fixtures, but also to other areas such as assigning officials to the games in the competitions. This paper provides an annotated bibliography for sports scheduling articles. This area can be traced back over 40 years. It is noticeable that the number of papers has risen in recent years, demonstrating that scientific interest is increasing in this area.},
  series = {Survey Papers},
  keywords = {type:Sports, Scheduling, Tournaments, Traveling tournament problem, Referee assignment, Metaheuristics, Local search, Integer programming, Constraint programming}
}

@article{HenzMT04,
  author       = {Martin Henz and
                  Tobias M{\"{u}}ller and
                  Sven Thiel},
  title        = {Global constraints for round robin tournament scheduling},
  journal      = {Eur. J. Oper. Res.},
  volume       = {153},
  number       = {1},
  pages        = {92--101},
  year         = {2004},
  url          = {https://doi.org/10.1016/S0377-2217(03)00101-2},
  doi          = {10.1016/S0377-2217(03)00101-2},
  abstract = {In the presence of side-constraints and optimization criteria, round robin tournament problems are hard combinatorial problems, commonly tackled with tree search and branch-and-bound optimization. Recent results indicate that constraint-based tree search has crucial advantages over integer programming-based tree search for this problem domain by exploiting global constraint propagation algorithms during search. In this paper, we analyze arc-consistent propagation algorithms for the global constraints “all-different” and “one-factor” in the domain of round robin tournaments. The best propagation algorithms allow us to compute all feasible perfectly mirrored pattern sets with minimal breaks for intermural tournaments of realistic size, and to improve known lower bounds for intramural tournaments balanced with respect to carry-over effects.},
  series = {Exact Algorithms},
  keywords = {type:Timetabling, Constraints satisfaction, Graph theory}
}

@article{DuranGMSSWW07,
  author       = {Guillermo Dur{\'{a}}n and
                  Mario Guajardo and
                  Jaime Miranda and
                  Denis Saur{\'{e}} and
                  Sebastian Souyris and
                  Andr{\'{e}}s Weintraub and
                  Rodrigo Wolf},
  title        = {Scheduling the Chilean Soccer League by Integer Programming},
  journal      = {Interfaces},
  volume       = {37},
  number       = {6},
  pages        = {539--552},
  year         = {2007},
  url          = {https://doi.org/10.1287/inte.1070.0318},
  doi          = {10.1287/INTE.1070.0318},
  abstract = {Since 2005, Chile's professional soccer league has used a game-scheduling system that is based on an integer linear programming model. The Chilean league managers considered several operational, economic, and sporting criteria for the final tournaments' scheduling. Thus, they created a highly constrained problem that had been, in practice, unsolvable using their previous methodology. This led to the adoption of a model that used some techniques that were new in soccer-league sports scheduling. The schedules they generated provided the teams with benefits such as lower costs, higher incomes, and fairer seasons. In addition, the tournaments were more attractive to sports fans. The success of the new scheduling system has completely fulfilled the expectations of the Asociación Nacional de Fútbol Profesional (ANFP), the organization for Chilean professional soccer.},
  series = {Exact Algorithms},
  keywords = {type:Chilean soccer league, integer programming, sports scheduling, recreation/sports, OR/MS implementation, scheduling}
}

@article{costa1994tabu,
  title={A tabu search algorithm for computing an operational timetable},
  author={Costa, Daniel},
  journal={European Journal of Operational Research},
  volume={76},
  number={1},
  pages={98--110},
  year={1994},
  publisher={Elsevier},
  url = {https://doi.org/10.1016/0377-2217(94)90009-4},
  doi = {10.1016/0377-2217(94)90009-4},
  series = {Heuristics and Metaheuristics},
  keywords = {type:Timetabling, Combinatorial optimization, Heuristic procedure, Tabu search},
  abstract = {The many constraints of different types that must be taken into account and the volume of data make the timetabling problem very hard to solve. Various specific requirements are considered in this paper. After having described precisely the problem to be solved, we present a general technique based on tabu search for finding an acceptable timetable. The resulting computerized algorithm is used for constructing different real course schedules. The results we obtain are very satisfactory.}
}

@inproceedings{GasperoS02,
  author       = {Luca Di Gaspero and
                  Andrea Schaerf},
  editor       = {Edmund K. Burke and
                  Patrick De Causmaecker},
  title        = {Multi-neighbourhood Local Search with Application to Course Timetabling},
  booktitle    = {Practice and Theory of Automated Timetabling IV, 4th International
                  Conference, {PATAT} 2002, Gent, Belgium, August 21-23, 2002, Selected
                  Revised Papers},
  series       = {Heuristics and Metaheuristics},
  volume       = {2740},
  pages        = {262--275},
  publisher    = {Springer},
  year         = {2002},
  url          = {https://doi.org/10.1007/978-3-540-45157-0\_17},
  doi          = {10.1007/978-3-540-45157-0\_17},
  abstract = {A recent trend in local search concerns the exploitation of several different neighbourhood functions so as to increase the ability of the algorithm to navigate the search space.

In this paper we investigate the use of local search techniques based on various combinations of neighbourhood functions, and we apply this to a timetabling problem. In particular, we propose a set of generic operators that automatically compose neighbourhood functions, giving rise to more complex ones. In the exploration of large neighbourhoods, we rely on constraint techniques to prune the list of candidates. In this way, we are able to select the most effective search technique through a systematic analysis of all possible combinations built upon a set of basic, human-defined, neighbourhood functions.

The proposed ideas are applied to a practical problem, namely the Course Timetabling problem. Our algorithms are systematically tested and compared on real-world instances. The experimental analysis shows that neighbourhood composition leads to much better results than traditional local search techniques.},
  keywords = {type:}
}

@article{LimRZ06,
  author       = {Andrew Lim and
                  Brian Rodrigues and
                  X. Zhang},
  title        = {A simulated annealing and hill-climbing algorithm for the traveling
                  tournament problem},
  journal      = {Eur. J. Oper. Res.},
  volume       = {174},
  number       = {3},
  pages        = {1459--1478},
  year         = {2006},
  url          = {https://doi.org/10.1016/j.ejor.2005.02.065},
  doi          = {10.1016/J.EJOR.2005.02.065},
  abstract = {The Traveling Tournament Problem (TTP) [E. Easton, G. Nemhauser, M. Trick, The traveling tournament problem description and benchmarks, in: Proceedings of the 7th International Conference on Principles and Practice of Constraint Programming, CP 2001, 2001, pp. 580-584; M. Trick, Challenge Traveling Tournament Problems, 2004] schedules a double round-robin tournament to minimize the total distance traveled by competing teams. It involves issues of feasibility and optimality and is a challenge to constraint and integer programming. In this work, we divide the search space and use simulated annealing (SA) to search a timetable space and hill-climbing to explore a team assignment space. The SA component mutates timetables using conditional local jumps to find timetables which lead to better schedules while hill-climbing is enhanced by pre-computation and dynamic cost updating to provide fast and efficient search. Computational experiments using this hybrid approach on benchmark sets give results comparable to or better than current best known solutions.},
  series       = {Heuristics and Metaheuristics},
  keywords = {type:Tournament, Scheduling, Heuristics}
}

@article{RussellU06,
  author       = {Robert A. Russell and
                  Timothy L. Urban},
  title        = {A constraint programming approach to the multiple-venue, sport-scheduling
                  problem},
  journal      = {Comput. Oper. Res.},
  volume       = {33},
  pages        = {1895--1906},
  year         = {2006},
  url          = {https://doi.org/10.1016/j.cor.2004.09.029},
  doi          = {10.1016/J.COR.2004.09.029},
  abstract = {In this paper, we consider the problem of scheduling sports competitions over several venues which are not associated with any of the competitors. A two-phase, constraint programming approach is developed, first identifying a solution that designates the participants and schedules each of the competitions, then assigning each competitor as the “home” or the “away” team. Computational experiments are conducted and the results are compared with an integer goal programming approach. The constraint programming approach achieves optimal solutions for problems with up to sixteen teams, and near-optimal solutions for problems with up to thirty teams.},
  keywords = {type:Scheduling, Sports management, Constraint programming, Timetabling},
  series       = {Heuristics and Metaheuristics}
}

@article{BulckGCDFLLPPR24,
  author       = {David Van Bulck and
                  Dries R. Goossens and
                  Jan{-}Patrick Clarner and
                  Angelos Dimitsas and
                  George H. G. Fonseca and
                  Carlos Lamas{-}Fernandez and
                  Martin Mariusz Lester and
                  Jaap Pedersen and
                  Antony E. Phillips and
                  Roberto Maria Rosati},
  title        = {Which algorithm to select in sports timetabling?},
  journal      = {Eur. J. Oper. Res.},
  volume       = {318},
  number       = {2},
  pages        = {575--591},
  year         = {2024},
  url          = {https://doi.org/10.1016/j.ejor.2024.06.005},
  doi          = {10.1016/J.EJOR.2024.06.005},
  abstract = {Any sports competition needs a timetable, specifying when and where teams meet each other. The recent International Timetabling Competition (ITC2021) on sports timetabling showed that, although it is possible to develop general algorithms, the performance of each algorithm varies considerably over the problem instances. This paper provides a problem type analysis for sports timetabling, resulting in powerful insights into the strengths and weaknesses of eight state-of-the-art algorithms. Based on machine learning techniques, we propose an algorithm selection system that predicts which algorithm is likely to perform best based on the type of competition and constraints being used (i.e., the problem type) in a given sports timetabling problem instance. Furthermore, we visualize how the problem type relates to algorithm performance, providing insights and possibilities to further enhance several algorithms. Finally, we assess the empirical hardness of the instances. Our results are based on large computational experiments involving about 50 years of CPU time on more than 500 newly generated problem instances.},
  keywords = {type:OR in sports, Sports scheduling, ITC2021, Algorithm selection, Instance space analysis},
  series       = {AI and Machine Learning Applications}
}

@article{PerezCH10,
  author       = {Ignacio Javier P{\'{e}}rez and
                  Francisco Javier Cabrerizo and
                  Enrique Herrera{-}Viedma},
  title        = {A Mobile Decision Support System for Dynamic Group Decision-Making
                  Problems},
  journal      = {{IEEE} Trans. Syst. Man Cybern. Part {A}},
  volume       = {40},
  number       = {6},
  pages        = {1244--1256},
  year         = {2010},
  url          = {https://doi.org/10.1109/TSMCA.2010.2046732},
  doi          = {10.1109/TSMCA.2010.2046732},
  abstract = {The aim of this paper is to present a decision support system model with two important characteristic: (i) mobile technologies are applied in the decision process, and (ii) the set of alternatives is not fixed over time to address dynamic decision situations in which the set of solution alternatives could change throughout the decision making process.We implement a prototype of such mobile decision support system in which experts use mobile phones to provide their preferences anywhere and anytime. In order to get a general system, experts' preferences are assumed to be represented by different preference representations: fuzzy preference relations, orderings, utility functions, and multiplicative preference relations. Because this prototype incorporates both selection and consensus processes, it allows to model group decision making situations. The prototype incorporates a tool to manage the changes on the set of feasible alternatives that could happen throughout the decision process. In such a way, the prototype provides a new approach to deal with dynamic group decision making situations to help making decisions anywhere and anytime.},
  keywords = {type:Group decision making, mobile internet, decision support system},
  series = {AI and Machine Learning Applications}
}

@article{MyersHP00,
  author       = {Brad A. Myers and
                  Scott E. Hudson and
                  Randy F. Pausch},
  title        = {Past, present, and future of user interface software tools},
  journal      = {{ACM} Trans. Comput. Hum. Interact.},
  volume       = {7},
  number       = {1},
  pages        = {3--28},
  year         = {2000},
  url          = {https://doi.org/10.1145/344949.344959},
  doi          = {10.1145/344949.344959},
  abstract = {A user interface software tool helps developers design and implement the user interface. Research on past tools has had enormous impact on today's developers—virtually all applications today are built using some form of user interface tool. In this article, we consider cases of both success and failure in past user interface tools. From these cases we extract a set of themes which can serve as lessons for future work. Using these themes, past tools can be characterized by what aspects of the user interface they addressed, their threshold and ceiling, what path of least resistance they offer, how predictable they are to use, and whether they addressed a target that became irrelevant. We believe the lessons of these past themes are particularly important now, because increasingly rapid technological changes are likely to significantly change user interfaces. We are at the dawn of an era where user interfaces are about to break out of the “desktop” box where they have been stuck for the past 15 years. The next millenium will open with an increasing diversity of user interface on an increasing diversity of computerized devices. These devices include hand-held personal digital assistants (PDAs), cell phones, pages, computerized pens, computerized notepads, and various kinds of desk and wall size-computers, as well as devices in everyday objects (such as mounted on refridgerators, or even embedded in truck tires). The increased connectivity of computers, initially evidenced by the World Wide Web, but spreading also with technologies such as personal-area networks, will also have a profound effect on the user interface to computers. Another important force will be recognition-based user interfaces, especially speech, and camera-based vision systems. Other changes we see are an increasing need for 3D and end-user customization, programming, and scripting. All of these changes will require significant support from the underlying user interface sofware tools.},
  keywords = {type:: Event languages, interface builders, scripting languages, toolkits, user interface development environments, user interface software},
  series = {Mobile Application and UX Considerations}
}
